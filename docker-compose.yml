

version: '2.3'
services:
  
#  zookeeper:
#    hostname: zookeeper
#    image: wurstmeister/zookeeper:3.4.6
#    expose:
#    - "2181"
#    ports:
#    - "2181:2181"
#  kafka:
#    image: wurstmeister/kafka
#    container_name: kafka
#    environment:
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092 #,OUTSIDE://localhost:9092
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092 #,OUTSIDE://0.0.0.0:9092
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    depends_on:
#    - zookeeper
#    ports:
#    - '9092:9092'
#    - '8082:8082'
#    - '8083:8083'
#    networks:
#      - default

  plugin-worker:
    build:
      context: plugin-worker
      dockerfile: Dockerfile.debug
    container_name: infra-worker
    environment:
     - KAFKA_BROKER_ADDRESS=kafka:9092
    volumes:
      - ./infra-worker:/go/src/app
    ports:
      - "4000:4000" # For debugger
#    depends_on:
#    - kafka
    networks:
      - default

  postgres:
    image: postgres:15.1-alpine3.17
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
    volumes:
     - ./data/mount:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db

  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - default
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - ./data/minio:/data

  bucket-init:
    image: minio/mc
    container_name: bucket-init
    depends_on:
      - minio
    networks:
      - default
    volumes:
      - ./tf-infra:/tmp/terraform
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000/ minioadmin minioadmin;
      /usr/bin/mc mb myminio/keycloak;
      /usr/bin/mc rm -r --force myminio/terraform;
      /usr/bin/mc mb myminio/terraform;
      /usr/bin/mc policy download myminio/terraform;
      /usr/bin/mc cp --recursive /tmp/terraform/* myminio/terraform;
      /usr/bin/mc version enable myminio/terraform;
      exit 0;
      "
    
#  kafka-cli:
#    image: edenhill/kafkacat:1.5.0
#    container_name: kafkacat
#    entrypoint:
#      - /bin/sh
#      - -c
#      - |
#        apk add jq;
#        while [ 1 -eq 1 ];do sleep 60;done

networks:
 default:
  driver: bridge
  ipam:
    driver: default
    config:
      - subnet: 10.5.0.0/16
        ip_range: 10.5.0.0/24
        gateway: 10.5.0.1
        aux_addresses:
          kafka: 10.5.0.2
          zookeeper: 10.5.0.3